import {
  require_react
} from "./chunk-PKEFF2V6.js";
import {
  __toModule
} from "./chunk-ESTXZSVW.js";

// node_modules/pubnub-react/dist/pubnub-react.esm.js
var import_react = __toModule(require_react());

// node_modules/ts-invariant/node_modules/tslib/tslib.es6.js
var extendStatics = function(d, b) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
    d2.__proto__ = b2;
  } || function(d2, b2) {
    for (var p in b2)
      if (b2.hasOwnProperty(p))
        d2[p] = b2[p];
  };
  return extendStatics(d, b);
};
function __extends(d, b) {
  extendStatics(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

// node_modules/ts-invariant/lib/invariant.esm.js
var genericMessage = "Invariant Violation";
var _a = Object.setPrototypeOf;
var setPrototypeOf = _a === void 0 ? function(obj, proto) {
  obj.__proto__ = proto;
  return obj;
} : _a;
var InvariantError = function(_super) {
  __extends(InvariantError2, _super);
  function InvariantError2(message) {
    if (message === void 0) {
      message = genericMessage;
    }
    var _this = _super.call(this, typeof message === "number" ? genericMessage + ": " + message + " (see https://github.com/apollographql/invariant-packages)" : message) || this;
    _this.framesToPop = 1;
    _this.name = genericMessage;
    setPrototypeOf(_this, InvariantError2.prototype);
    return _this;
  }
  return InvariantError2;
}(Error);
function invariant(condition, message) {
  if (!condition) {
    throw new InvariantError(message);
  }
}
function wrapConsoleMethod(method) {
  return function() {
    return console[method].apply(console, arguments);
  };
}
(function(invariant2) {
  invariant2.warn = wrapConsoleMethod("warn");
  invariant2.error = wrapConsoleMethod("error");
})(invariant || (invariant = {}));
var processStub = { env: {} };
if (typeof process === "object") {
  processStub = process;
} else
  try {
    Function("stub", "process = stub")(processStub);
  } catch (atLeastWeTried) {
  }
var invariant$1 = invariant;
var invariant_esm_default = invariant$1;

// node_modules/pubnub-react/dist/pubnub-react.esm.js
var PubNubContext = import_react.default.createContext(null);
function appendPnsdk(pubnub) {
  if (typeof pubnub._addPnsdkSuffix === "function") {
    pubnub._addPnsdkSuffix("react", "React/2.1.1");
  }
}
var PubNubProvider = function PubNubProvider2(_ref) {
  var client = _ref.client, children = _ref.children;
  var contextValue = import_react.default.useMemo(function() {
    return {
      client
    };
  }, [client]);
  !contextValue.client ? true ? invariant_esm_default(false, 'PubNubProvider was not passed a client instance. Make sure you pass in your client via the "client" prop.') : invariant_esm_default(false) : void 0;
  import_react.default.useEffect(function() {
    appendPnsdk(contextValue.client);
  }, []);
  return import_react.default.createElement(PubNubContext.Provider, {
    value: contextValue
  }, children);
};
var PubNubConsumer = function PubNubConsumer2(_ref) {
  var children = _ref.children;
  var context = import_react.default.useContext(PubNubContext);
  !(context && context.client) ? true ? invariant_esm_default(false, 'Could not find "client" in the context of PubNubConsumer. Wrap the root component in an <PubNubProvider>.') : invariant_esm_default(false) : void 0;
  return import_react.default.createElement(import_react.default.Fragment, null, children(context.client));
};
function usePubNub() {
  var context = (0, import_react.useContext)(PubNubContext);
  !(context && context.client) ? true ? invariant_esm_default(false, "No PubNub Client instance can be found. Please ensure that you have called `PubNubProvider` higher up in your tree.") : invariant_esm_default(false) : void 0;
  return context.client;
}

export {
  PubNubProvider,
  PubNubConsumer,
  usePubNub
};
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
//# sourceMappingURL=chunk-LS64MTRO.js.map
